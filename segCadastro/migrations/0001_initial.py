# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-16 02:55
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import segCadastro.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assunto_Processo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Assunto do Processo',
                'verbose_name_plural': 'Assuntos do Processo',
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Secao', models.CharField(max_length=1, verbose_name=b'Se\xc3\xa7\xc3\xa3o')),
                ('Divisao', models.CharField(max_length=2, verbose_name=b'Divis\xc3\xa3o')),
                ('Grupo', models.CharField(max_length=3)),
                ('Classe', models.CharField(max_length=5)),
                ('Subclasse', models.CharField(max_length=7, unique=True)),
                ('Denominacao', models.CharField(max_length=150, verbose_name=b'Denomina\xc3\xa7\xc3\xa3o')),
                ('Risco', models.CharField(max_length=1)),
                ('BaseLegal', models.TextField(blank=True, verbose_name=b'Base Legal')),
                ('Nota', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Autorizacao_Funcionamento',
            fields=[
                ('NumeroAF', models.PositiveIntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(9999999)], verbose_name=b'N\xc3\xbamero da Autoriza\xc3\xa7\xc3\xa3o')),
                ('DataPublicacao', models.DateField(verbose_name=b'Data da Publica\xc3\xa7\xc3\xa3o')),
                ('Tipo', models.CharField(choices=[(b'AFE', b'AFE - Autoriza\xc3\xa7\xc3\xa3o de Funcionamento da Empresa'), (b'AE', b'AE - Autoriza\xc3\xa7\xc3\xa3o Especial')], max_length=3)),
                ('Categoria', models.CharField(choices=[(b'DR', b'Farm\xc3\xa1cia / Drogaria'), (b'CR', b'Produto para Sa\xc3\xbade / Correlato'), (b'SN', b'Saneante Domissanit\xc3\xa1rio'), (b'CO', b'Cosmetico / Perfume / Produto de Higiene'), (b'MD', b'Medicamento / Insumo Farmac\xc3\xaautico')], max_length=2)),
            ],
            options={
                'verbose_name': 'Autoriza\xe7\xe3o de Funcionamento',
                'verbose_name_plural': 'Autoriza\xe7\xf5es de Funcionamento',
            },
        ),
        migrations.CreateModel(
            name='Categoria_Atividade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Grupo', models.CharField(max_length=100)),
                ('Subgrupo', models.CharField(blank=True, max_length=100)),
                ('Agrupamento', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CBO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Codigo', models.CharField(max_length=6, verbose_name=b'C\xc3\xb3digo')),
                ('Ocupacao', models.CharField(max_length=100, verbose_name=b'Ocupa\xc3\xa7\xc3\xa3o')),
            ],
            options={
                'verbose_name': 'CBO',
                'verbose_name_plural': "CBO's",
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DataHora', models.DateTimeField(auto_now_add=True)),
                ('Assunto', models.CharField(max_length=50)),
                ('Arquivo', models.FileField(upload_to=segCadastro.models.user_directory_path)),
                ('Descricao', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Equipamento_Saude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Caracteristicas', models.TextField(verbose_name=b'Caracter\xc3\xadsticas')),
            ],
            options={
                'verbose_name': 'Equipamento de Sa\xfade',
                'verbose_name_plural': 'Equipamentos de Sa\xfade',
            },
        ),
        migrations.CreateModel(
            name='Estabelecimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TipoCadastro', models.IntegerField(choices=[(0, b'Pr\xc3\xa9-cadastro'), (1, b'Cadastro Definitivo')], verbose_name=b'Tipo de Cadastro')),
                ('Pasta', models.IntegerField(blank=True, null=True)),
                ('CEP', models.CharField(blank=True, max_length=8)),
                ('Endereco', models.CharField(max_length=100, verbose_name=b'Endere\xc3\xa7o')),
                ('Numero', models.CharField(max_length=10, verbose_name=b'N\xc3\xbamero')),
                ('Complemento', models.CharField(blank=True, max_length=50)),
                ('PontoReferencia', models.CharField(blank=True, max_length=50, verbose_name=b'Ponto de Refer\xc3\xaancia')),
                ('Bairro', models.CharField(max_length=50)),
                ('TelefonePrimario', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(99999999999)], verbose_name=b'Telefone Prim\xc3\xa1rio')),
                ('TelefoneSecundario', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99999999999)], verbose_name=b'Telefone Secund\xc3\xa1rio')),
                ('Email', models.EmailField(max_length=150)),
                ('CNES', models.IntegerField(blank=True, null=True)),
                ('Obs', models.TextField(blank=True, verbose_name=b'Observa\xc3\xa7\xc3\xa3o')),
                ('ConsultorioMedicoPediatrico', models.IntegerField(blank=True, null=True, verbose_name=b'Consult\xc3\xb3rio M\xc3\xa9dico Pedi\xc3\xa1trico')),
                ('ConsultorioMedicoFeminino', models.IntegerField(blank=True, null=True, verbose_name=b'Consult\xc3\xb3rio M\xc3\xa9dico Feminino')),
                ('ConsultorioMedicoMasculino', models.IntegerField(blank=True, null=True, verbose_name=b'Consult\xc3\xb3rio M\xc3\xa9dico Masculino')),
                ('ConsultorioMedicoOutro', models.IntegerField(blank=True, null=True, verbose_name=b'Outro Consult\xc3\xb3rio M\xc3\xa9dico')),
                ('OutroConsultorio', models.IntegerField(blank=True, null=True, verbose_name=b'Outro Consult\xc3\xb3rio')),
                ('SalaPediatrico', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Pedi\xc3\xa1trico')),
                ('LeitoRepousoPediatrico', models.IntegerField(blank=True, null=True, verbose_name=b'Leito de Repouso (Observa\xc3\xa7\xc3\xa3o) Pedi\xc3\xa1trico')),
                ('SalaFeminino', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Feminino')),
                ('LeitoRepousoFeminino', models.IntegerField(blank=True, null=True, verbose_name=b'Leito de Repouso (Observa\xc3\xa7\xc3\xa3o) Feminino')),
                ('SalaMasculino', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Masculino')),
                ('LeitoRepousoMasculino', models.IntegerField(blank=True, null=True, verbose_name=b'Leito de Repouso (Observa\xc3\xa7\xc3\xa3o) Masculino')),
                ('SalaOutro', models.IntegerField(blank=True, null=True, verbose_name=b'Outra Sala')),
                ('LeitoRepousoOutro', models.IntegerField(blank=True, null=True, verbose_name=b'Outro Leito de Repouso (Observa\xc3\xa7\xc3\xa3o)')),
                ('ConsultorioOdontologico', models.IntegerField(blank=True, null=True, verbose_name=b'Consult\xc3\xb3rio Odontol\xc3\xb3gico')),
                ('Equipo', models.IntegerField(blank=True, null=True)),
                ('SalaPequenaCirurgia', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Pequena Cirurgia')),
                ('SalaNebulizacao', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Nebuliza\xc3\xa7\xc3\xa3o')),
                ('SalaGesso', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Gesso')),
                ('SalaImunizacao', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Imuniza\xc3\xa7\xc3\xa3o')),
                ('SalaCurativo', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Curativo')),
                ('SalaEnfermagem', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Enfermagem')),
                ('SalaCirurgiaAmbulatorial', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Cirurgia Ambulatorial')),
                ('SalaQuimioterapia', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Quimioterapia')),
                ('PoltronaQuimioterapia', models.IntegerField(blank=True, null=True, verbose_name=b'Poltrona Quimioterapia')),
                ('SalaDialise', models.IntegerField(blank=True, null=True, verbose_name=b'Sala Di\xc3\xa1lise')),
                ('PoltronaDialise', models.IntegerField(blank=True, null=True, verbose_name=b'Poltrona Di\xc3\xa1lise')),
                ('LtIntCirurgicaBucoMaxiloFacial', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Buco Maxilo Facial')),
                ('LtIntCirurgicaCardiologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Cardiologia')),
                ('LtIntCirurgicaCirurgiaGeral', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Cirurgia Geral')),
                ('LtIntCirurgicaEndocrinologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Endocrinologia')),
                ('LtIntCirurgicaGenterologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Gastroenterologia')),
                ('LtIntCirurgicaGinecologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Ginecologia')),
                ('LtIntCirurgicaLeitoDia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Leito / Dia')),
                ('LtIntCirurgicaNefroUrologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Nefrologia / Urologia')),
                ('LtIntCirurgicaNeurocirurgia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Neurocirurgia')),
                ('LtIntCirurgicaObstetricia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Obstetr\xc3\xadcia')),
                ('LtIntCirurgicaOftalmologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Oftalmologia')),
                ('LtIntCirurgicaOncologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Oncologia')),
                ('LtIntCirurgicaOrtTraumatologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Ortopedia / Traumatologia')),
                ('LtIntCirurgicaOtorrinolaringo', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Otorrinolaringologia')),
                ('LtIntCirurgicaPlastica', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Pl\xc3\xa1stica')),
                ('LtIntCirurgicaToracica', models.IntegerField(blank=True, null=True, verbose_name=b'Cir\xc3\xbargica Tor\xc3\xa1cica')),
                ('LtIntClinicaAIDS', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica AIDS')),
                ('LtIntClinicaCardiologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Cardiologia')),
                ('LtIntClinicaClinicaGeral', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica - Cl\xc3\xadnica Geral')),
                ('LtIntClinicaCronicos', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Cr\xc3\xb4nicos')),
                ('LtIntClinicaDermatologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Dermatologia')),
                ('LtIntClinicaGeriatria', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Geriatria')),
                ('LtIntClinicaHansenologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Hansenologia')),
                ('LtIntClinicaHematologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Hematologia')),
                ('LtIntClinicaLeitoDia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Leito / Dia')),
                ('LtIntClinicaNefroUrologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Nefro / Urologia')),
                ('LtIntClinicaNeonatologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Neonatologia')),
                ('LtIntClinicaNeurologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Neurologia')),
                ('LtIntClinicaObstetricia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Obstetr\xc3\xadcia')),
                ('LtIntClinicaOncologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Oncologia')),
                ('LtIntClinicaPediatria', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Pediatria')),
                ('LtIntClinicaPneumologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Pneumologia')),
                ('LtIntClinicaPsiquiatria', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Psiquiatria')),
                ('LtIntClinicaReabilitacao', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Reabilita\xc3\xa7\xc3\xa3o')),
                ('LtIntClinicaTisiologia', models.IntegerField(blank=True, null=True, verbose_name=b'Cl\xc3\xadnica Tisiologia')),
                ('UrgIntUTIAdulto', models.IntegerField(blank=True, null=True, verbose_name=b'UTI Adulto')),
                ('UrgIntUTIInfantil', models.IntegerField(blank=True, null=True, verbose_name=b'UTI Infantil')),
                ('UrgIntUTINeonatal', models.IntegerField(blank=True, null=True, verbose_name=b'UTI Neonatal')),
                ('UrgIntUTIUnidadeIntermediaria', models.IntegerField(blank=True, null=True, verbose_name=b'Unidade Intermedi\xc3\xa1ria')),
                ('UrgIntUTIUnidadeInterNeonatal', models.IntegerField(blank=True, null=True, verbose_name=b'Unidade Intermedi\xc3\xa1ria Neonatal')),
                ('UrgIntUTIUnidadeIsolamento', models.IntegerField(blank=True, null=True, verbose_name=b'Unidade de Isolamento')),
                ('UrgLtObservacaoProntoSocorro', models.IntegerField(blank=True, null=True, verbose_name=b'Unidade de Urg\xc3\xaancia / Emerg\xc3\xaancia (Pronto-Socorro) - Leitos Observa\xc3\xa7\xc3\xa3o')),
            ],
        ),
        migrations.CreateModel(
            name='Fisica_Desempenha_Atv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Atividade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Atividade', verbose_name=b'Atividade(s) Econ\xc3\xb4mica(s)')),
            ],
            options={
                'verbose_name': 'Caracteriza\xe7\xe3o da Atividade de Pessoa F\xedsica',
                'verbose_name_plural': 'Caracteriza\xe7\xf5es das Atividades de Pessoa F\xedsica',
            },
        ),
        migrations.CreateModel(
            name='Juridica_Desempenha_Atv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Manipular', models.BooleanField()),
                ('Fracionar', models.BooleanField()),
                ('Dispensar', models.BooleanField()),
                ('AferirParam', models.BooleanField(verbose_name=b'Aferir par\xc3\xa2metros fisiol\xc3\xb3gicos e bioqu\xc3\xadmico')),
                ('PrestarAten', models.BooleanField(verbose_name=b'Prestar aten\xc3\xa7\xc3\xa3o farmac\xc3\xaautica domiciliar')),
                ('AdmAplicar', models.BooleanField(verbose_name=b'Administrar/aplicar medicamentos')),
                ('Perfurar', models.BooleanField(verbose_name=b'Perfurar l\xc3\xb3bulo auricular para coloca\xc3\xa7\xc3\xa3o de brinco')),
                ('DispRemoto', models.BooleanField(verbose_name=b'Dispensar por meio remoto')),
                ('Fabricar', models.BooleanField()),
                ('Transformar', models.BooleanField()),
                ('Purificar', models.BooleanField()),
                ('Extrair', models.BooleanField()),
                ('Fragmentar', models.BooleanField()),
                ('Sintetizar', models.BooleanField()),
                ('EstRadiacaoIon', models.BooleanField(verbose_name=b'Esterelizar radia\xc3\xa7\xc3\xa3o ionizante')),
                ('EstETO', models.BooleanField(verbose_name=b'Esterelizar ETO')),
                ('EstOutras', models.BooleanField(verbose_name=b'Esterelizar outras')),
                ('Reprocessar', models.BooleanField()),
                ('Irradiar', models.BooleanField()),
                ('Transportar', models.BooleanField()),
                ('Expedir', models.BooleanField()),
                ('Armazenar', models.BooleanField()),
                ('Embalar', models.BooleanField()),
                ('Distribuir', models.BooleanField()),
                ('Importar', models.BooleanField()),
                ('ImpUsoProprio', models.BooleanField(verbose_name=b'Importar para uso pr\xc3\xb3prio')),
                ('Exportar', models.BooleanField()),
                ('RealEtapFab', models.BooleanField(verbose_name=b'Realizar etapas de fabrica\xc3\xa7\xc3\xa3o')),
                ('Atividade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Atividade', verbose_name=b'Atividade(s) Econ\xc3\xb4mica(s)')),
            ],
            options={
                'verbose_name': 'Caracteriza\xe7\xe3o da Atividade de Pessoa Jur\xeddica',
                'verbose_name_plural': 'Caracteriza\xe7\xf5es das Atividades de Pessoa Jur\xeddica',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('IBGE', models.PositiveIntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999999)], verbose_name=b'C\xc3\xb3digo IBGE')),
                ('Nome', models.CharField(max_length=45, verbose_name=b'Nome do Munic\xc3\xadpio')),
            ],
            options={
                'ordering': ['Nome'],
                'verbose_name': 'Munic\xedpio',
                'verbose_name_plural': 'Munic\xedpios',
            },
        ),
        migrations.CreateModel(
            name='Natureza_Juridica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Codigo', models.PositiveIntegerField(unique=True)),
                ('Nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Processo',
            fields=[
                ('Tipo', models.CharField(choices=[(b'I', b'Inicial'), (b'R', b'Renova\xc3\xa7\xc3\xa3o'), (b'A', b'Altera\xc3\xa7\xc3\xa3o'), (b'O', b'Outro')], max_length=1)),
                ('Numero', models.AutoField(primary_key=True, serialize=False)),
                ('Ano', models.CharField(max_length=4)),
                ('DataEmissao', models.DateTimeField(auto_now_add=True)),
                ('Exercicio', models.CharField(max_length=4)),
                ('Obs', models.TextField(blank=True)),
                ('Assunto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Assunto_Processo')),
            ],
        ),
        migrations.CreateModel(
            name='Processo_Tramita_Setor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Operacao', models.BooleanField(choices=[(False, b'Enviar'), (True, b'Receber')], verbose_name=b'Opera\xc3\xa7\xc3\xa3o')),
                ('DataHora', models.DateTimeField(auto_now_add=True)),
                ('Processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Processo')),
            ],
            options={
                'verbose_name': 'Tramita\xe7\xe3o de Processo',
                'verbose_name_plural': 'Tramita\xe7\xe3o de Processos',
            },
        ),
        migrations.CreateModel(
            name='Redesim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sigla', models.CharField(max_length=4)),
                ('CNPJ', models.CharField(max_length=14)),
                ('NIRE', models.CharField(max_length=12)),
                ('XML', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Responsavel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=100)),
                ('CPF', models.CharField(max_length=11, unique=True)),
                ('SiglaConselhoClasse', models.CharField(blank=True, max_length=10, verbose_name=b'Sigla do Conselho de Classe')),
                ('InscricaoConselhoClasse', models.CharField(blank=True, max_length=25, verbose_name=b'Inscri\xc3\xa7\xc3\xa3o no Conselho de Classe')),
                ('CEP', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999999)])),
                ('Endereco', models.CharField(max_length=100, verbose_name=b'Endere\xc3\xa7o')),
                ('Numero', models.CharField(max_length=10, verbose_name=b'N\xc3\xbamero')),
                ('Complemento', models.CharField(blank=True, max_length=50)),
                ('Bairro', models.CharField(max_length=50)),
                ('TelefonePrimario', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(99999999999)], verbose_name=b'Telefone Prim\xc3\xa1rio')),
                ('TelefoneSecundario', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99999999999)], verbose_name=b'Telefone Secund\xc3\xa1rio')),
                ('Email', models.EmailField(max_length=150)),
                ('CBO', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.CBO')),
                ('Municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Municipio', verbose_name=b'Munic\xc3\xadpios')),
            ],
            options={
                'verbose_name': 'Respons\xe1vel',
                'verbose_name_plural': 'Respons\xe1veis',
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=100)),
                ('Sigla', models.CharField(max_length=20)),
                ('Unidade', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Setores',
            },
        ),
        migrations.CreateModel(
            name='Situacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Situacao', models.CharField(max_length=50)),
                ('Obs', models.TextField(blank=True)),
                ('Processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Processo')),
            ],
            options={
                'verbose_name': 'Situa\xe7\xe3o de Processo',
                'verbose_name_plural': 'Situa\xe7\xf5es de Processos',
            },
        ),
        migrations.CreateModel(
            name='Tipo_Equipamento_Saude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Categoria', models.IntegerField(choices=[(0, b'Geral'), (1, b'Para Medi\xc3\xa7\xc3\xb5es'), (2, b'Auxiliares para Radiometria e Testes de Qualidade em Radiodiagn\xc3\xb3stico'), (3, b'Com Fontes Seladas'), (4, b'Fonstes Seladas'), (5, b'Para Uso Veterin\xc3\xa1rio')])),
                ('Tipo', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Equipamento de Sa\xfade',
                'verbose_name_plural': 'Tipos de Equipamentos de Sa\xfade',
            },
        ),
        migrations.CreateModel(
            name='Tipo_Servico_Saude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tipo', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Servi\xe7o de Sa\xfade',
                'verbose_name_plural': 'Tipos de Servi\xe7os de Sa\xfade',
            },
        ),
        migrations.CreateModel(
            name='Valor_UFR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Data', models.DateField()),
                ('Valor', models.FloatField()),
            ],
            options={
                'verbose_name': 'Valor da UFR',
                'verbose_name_plural': 'Valores da UFR',
            },
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Renavam', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(999999999999999)])),
                ('Nome', models.CharField(max_length=150)),
                ('CNPJ', models.CharField(blank=True, max_length=14)),
                ('CPF', models.CharField(blank=True, max_length=11)),
                ('Placa', models.CharField(max_length=7)),
                ('UF', models.CharField(max_length=2)),
                ('Chassi', models.CharField(max_length=17)),
                ('Tipo', models.CharField(max_length=8)),
                ('MarcaModelo', models.CharField(max_length=50, verbose_name=b'Marca / Modelo')),
                ('AnoFab', models.CharField(max_length=4, verbose_name=b'Ano de Fabrica\xc3\xa7\xc3\xa3o')),
                ('AnoMod', models.CharField(max_length=4, verbose_name=b'Ano de Modelo')),
                ('CNES', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(99999999999)])),
                ('Obs', models.TextField(blank=True, verbose_name=b'Observa\xc3\xa7\xc3\xa3o')),
            ],
            options={
                'ordering': ['Placa'],
                'verbose_name': 'Ve\xedculo',
                'verbose_name_plural': 'Ve\xedculos',
            },
        ),
        migrations.CreateModel(
            name='Pessoa_Fisica',
            fields=[
                ('estabelecimento_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='segCadastro.Estabelecimento')),
                ('Nome', models.CharField(max_length=100)),
                ('CPF', models.CharField(max_length=11)),
                ('SiglaConselhoClasse', models.CharField(blank=True, max_length=10, verbose_name=b'Sigla do Conselho de Classe')),
                ('InscricaoConselhoClasse', models.CharField(blank=True, max_length=25, verbose_name=b'Inscri\xc3\xa7\xc3\xa3o no Conselho de Classe')),
            ],
            options={
                'verbose_name': 'Estabelecimento - Pessoa F\xedsica',
                'verbose_name_plural': 'Estabelecimentos - Pessoa F\xedsica',
            },
            bases=('segCadastro.estabelecimento',),
        ),
        migrations.CreateModel(
            name='Pessoa_Juridica',
            fields=[
                ('estabelecimento_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='segCadastro.Estabelecimento')),
                ('RazaoSocial', models.CharField(max_length=150, verbose_name=b'Raz\xc3\xa3o Social')),
                ('NomeFantasia', models.CharField(blank=True, max_length=150, verbose_name=b'Nome Fantasia')),
                ('CNPJ', models.CharField(max_length=14)),
                ('NIRE', models.CharField(blank=True, max_length=12)),
                ('Porte', models.IntegerField(blank=True, choices=[(1, b'Agricultura Familiar'), (2, b'Economia Solid\xc3\xa1ria'), (3, b'Microempreendedor Individual'), (4, b'Micro Empresa'), (5, b'Pequeno Porte'), (6, b'Grande Porte')], null=True)),
                ('Tipo', models.IntegerField(choices=[(1, b'Matriz'), (2, b'Filial')])),
                ('CNPJMatriz', models.CharField(blank=True, max_length=14, verbose_name=b'CNPJ Matriz')),
                ('Natureza', models.IntegerField(choices=[(1, b'Privada'), (2, b'P\xc3\xbablica'), (3, b'Filantr\xc3\xb3pica')])),
                ('InicioAtividades', models.DateField(blank=True, null=True, verbose_name=b'In\xc3\xadcio das Atividades')),
                ('TerminoAtividades', models.DateField(blank=True, null=True, verbose_name=b'T\xc3\xa9rmino das Atividades')),
                ('Situacao', models.IntegerField(choices=[(0, b'ATIVA'), (1, b'SEM STATUS'), (2, b'CANCELADA - ART.60 LEI 8934/94'), (3, b'EXTINTA'), (4, b'CONVERTIDA SOC. CIVIL/SIMPLES'), (5, b'CINDIDA TOTALMENTE'), (6, b'TRANSFERIDA PARA OUTRA UF'), (7, b'FALIDA'), (8, b'CANCELADA'), (9, b'REGISTRO ATIVO PROVIS\xc3\x93RIO'), (10, b'CANCELADA-MEI'), (11, b'SUSPENS\xc3\x83O TEMPOR\xc3\x81RIA DE ATIVIDADES')], default=0, verbose_name=b'Situa\xc3\xa7\xc3\xa3o')),
                ('ObjetoSocial', models.TextField(blank=True, verbose_name=b'Objeto Social')),
                ('AreaUtilizada', models.CharField(blank=True, max_length=13, verbose_name=b'\xc3\x81rea Utilizada')),
                ('Metragem', models.CharField(blank=True, max_length=13)),
            ],
            options={
                'verbose_name': 'Estabelecimento - Pessoa Jur\xeddica',
                'verbose_name_plural': 'Estabelecimentos - Pessoa Jur\xeddica',
            },
            bases=('segCadastro.estabelecimento',),
        ),
        migrations.AddField(
            model_name='processo_tramita_setor',
            name='Setor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Setor'),
        ),
        migrations.AddField(
            model_name='processo',
            name='Estabelecimento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Estabelecimento'),
        ),
        migrations.AddField(
            model_name='processo',
            name='ProcessoMae',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Processo'),
        ),
        migrations.AddField(
            model_name='processo',
            name='TramitaSetor',
            field=models.ManyToManyField(blank=True, through='segCadastro.Processo_Tramita_Setor', to='segCadastro.Setor'),
        ),
        migrations.AddField(
            model_name='juridica_desempenha_atv',
            name='ResponsavelTecnico',
            field=models.ManyToManyField(blank=True, to='segCadastro.Responsavel', verbose_name=b'Respons\xc3\xa1vel(eis) T\xc3\xa9cnico(s)'),
        ),
        migrations.AddField(
            model_name='juridica_desempenha_atv',
            name='Setor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Setor'),
        ),
        migrations.AddField(
            model_name='juridica_desempenha_atv',
            name='Veiculo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Veiculo'),
        ),
        migrations.AddField(
            model_name='fisica_desempenha_atv',
            name='Setor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Setor'),
        ),
        migrations.AddField(
            model_name='estabelecimento',
            name='Municipio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Municipio', verbose_name=b'Munic\xc3\xadpio'),
        ),
        migrations.AddField(
            model_name='estabelecimento',
            name='TiposServicoSaude',
            field=models.ManyToManyField(blank=True, to='segCadastro.Tipo_Servico_Saude', verbose_name=b'Tipos do Servi\xc3\xa7o de Sa\xc3\xbade'),
        ),
        migrations.AddField(
            model_name='equipamento_saude',
            name='Estabelecimento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Estabelecimento'),
        ),
        migrations.AddField(
            model_name='equipamento_saude',
            name='Tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Tipo_Equipamento_Saude'),
        ),
        migrations.AddField(
            model_name='documento',
            name='Processo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Processo'),
        ),
        migrations.AlterUniqueTogether(
            name='categoria_atividade',
            unique_together=set([('Grupo', 'Agrupamento')]),
        ),
        migrations.AddField(
            model_name='autorizacao_funcionamento',
            name='Estabelecimento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Estabelecimento'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='Categoria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Categoria_Atividade'),
        ),
        migrations.AlterUniqueTogether(
            name='processo',
            unique_together=set([('Tipo', 'Numero', 'Ano')]),
        ),
        migrations.AddField(
            model_name='pessoa_juridica',
            name='Atividade',
            field=models.ManyToManyField(through='segCadastro.Juridica_Desempenha_Atv', to='segCadastro.Atividade'),
        ),
        migrations.AddField(
            model_name='pessoa_juridica',
            name='EstabelecimentoMantenedor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segcadastro_pessoa_juridica_estabelecimeto_mantenedor', to='segCadastro.Pessoa_Juridica', verbose_name=b'Estabelecimento Mantenedor'),
        ),
        migrations.AddField(
            model_name='pessoa_juridica',
            name='NaturezaJuridica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Natureza_Juridica', verbose_name=b'Natureza Jur\xc3\xaddica'),
        ),
        migrations.AddField(
            model_name='pessoa_juridica',
            name='ProfissionaisCCIH',
            field=models.ManyToManyField(blank=True, related_name='segcadastro_pessoa_juridica_profissional_ccih', to='segCadastro.Responsavel', verbose_name=b'Comiss\xc3\xa3o de Controle de Infec\xc3\xa7\xc3\xa3o Hospitalar / CCIH'),
        ),
        migrations.AddField(
            model_name='pessoa_juridica',
            name='ResponsaveisLegais',
            field=models.ManyToManyField(blank=True, related_name='segcadastro_pessoa_juridica_responsavel_legal', to='segCadastro.Responsavel', verbose_name=b'Respons\xc3\xa1veis Legais'),
        ),
        migrations.AddField(
            model_name='pessoa_fisica',
            name='Atividade',
            field=models.ManyToManyField(through='segCadastro.Fisica_Desempenha_Atv', to='segCadastro.Atividade'),
        ),
        migrations.AddField(
            model_name='juridica_desempenha_atv',
            name='PessoaJuridica',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Pessoa_Juridica', verbose_name=b'Pessoa Jur\xc3\xaddica'),
        ),
        migrations.AddField(
            model_name='fisica_desempenha_atv',
            name='PessoaFisica',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segCadastro.Pessoa_Fisica', verbose_name=b'Pessoa F\xc3\xadsica'),
        ),
    ]
